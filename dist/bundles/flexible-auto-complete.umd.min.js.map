{
  "version": 3,
  "file": "flexible-auto-complete.umd.min.js",
  "sources": [
    "ng://flexible-auto-complete/out/src/app/flexible-auto-complete/flexible-auto-complete.component.ts",
    "ng://flexible-auto-complete/out/src/app/flexible-auto-complete/flexible-auto-complete-module.ts"
  ],
  "sourcesContent": [
    "/*\r\n* Provides rendering of a table which is using the given FlexibleTableHeader set in\r\n* order to tabulate the given data. As per definition of earch header component,\r\n* a column could be hidden, sortable, or draggable. Each table row can expand/collapse\r\n* or respond to a click action.\r\n*/\r\nimport {\r\n    Component,\r\n\tInput,\r\n\tOutput,\r\n\tAfterViewInit,\r\n\tEventEmitter\r\n} from '@angular/core';\r\n\r\nimport { Http } from '@angular/http';\r\n\r\n@Component({\r\n\tselector: 'flexible-auto-complete',\r\n\ttemplate: `\r\n<label for=\"\">\r\n    <span class=\"off-screen\" [textContent]=\"message\"></span>\r\n    <input [value]=\"entry\"\r\n        [placeholder]= \"placeholder\"\r\n        (keyup)=\"keyup($event)\" />\r\n    <span [class]=\"icon ? icon : null\" *ngIf=\"filteredData.length == 0\" [class.icon]=\"true\" area-hidden=\"true\"></span>\r\n    <span class=\"icon fa fa-reply\" *ngIf=\"icon && filteredData.length\" area-hidden=\"true\"></span>\r\n</label>\r\n<ul *ngIf=\"filteredData.length\" \r\n    role=\"list\" \r\n    class=\"viewport\" \r\n    [style.max-width]=\"direction === 'horizontal' ? viewport : null\"\r\n    [style.overflow-x]=\"direction === 'horizontal' ? 'auto' : null\"\r\n    [style.flex-direction]=\"direction === 'horizontal' ? 'row' : 'column'\"\r\n    [style.max-height]=\"direction === 'vertical' ? viewport : null\"\r\n    [style.overflow-y]=\"direction === 'vertical' ? 'auto' : null\">\r\n    <li role=\"listitem\" tabindex=\"0\" *ngFor=\"let item of filteredData\" (keyup)=\"clickup($event, item)\" (click)=\"selectTab(item)\">\r\n        <ng-container  \r\n            [ngTemplateOutlet]=\"template ? template : defaultTemplate\" \r\n            [ngTemplateOutletContext]=\"{data: item}\"></ng-container>\r\n        <span class=\"icon fa fa-reply\" area-hidden=\"true\"></span>\r\n    </li>\r\n</ul>\r\n\r\n<ng-template #defaultTemplate let-detail=\"data\">\r\n  <span *ngFor=\"let x of keymap\" [textContent]=\"detail[x] + '&nbsp;'\"></span>\r\n</ng-template>\r\n`,\r\n\tstyles: [`:host{display:table;width:100%}:host label{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;border:1px solid #ddd;padding:2px;height:22px;vertical-align:top;border-radius:2px;-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,.16),0 0 0 1px rgba(0,0,0,.08);box-shadow:0 2px 2px 0 rgba(0,0,0,.16),0 0 0 1px rgba(0,0,0,.08);-webkit-transition:-webkit-box-shadow .2s cubic-bezier(.4,0,.2,1);transition:-webkit-box-shadow .2s cubic-bezier(.4,0,.2,1);transition:box-shadow .2s cubic-bezier(.4,0,.2,1);transition:box-shadow .2s cubic-bezier(.4,0,.2,1),-webkit-box-shadow .2s cubic-bezier(.4,0,.2,1)}:host label input{-webkit-box-flex:1;-ms-flex:1;flex:1;border:0;padding-left:16px}:host label .icon{-webkit-box-flex:0;-ms-flex:0 0 15px;flex:0 0 15px;margin-right:5px;margin-top:3px;color:#ddd}:host .off-screen{display:block;float:left;height:0;overflow:hidden;text-indent:-99999px;width:0}:host .viewport{-webkit-box-sizing:border-box;box-sizing:border-box;list-style-type:none;display:-webkit-box;display:-ms-flexbox;display:flex;margin:0;padding:0;z-index:2;border:1px solid #ddd;border-radius:2px;background-color:#fff;overflow:hidden}:host .viewport li{-webkit-box-sizing:border-box;box-sizing:border-box;white-space:nowrap;background-color:#fdfeff;padding:2px 5px;position:relative}:host .viewport li:hover{background-color:#ff3e58}:host .viewport li:focus{background-color:#3e8bff}:host .viewport li .icon{color:#fff;display:block;right:0;top:5px;position:absolute;margin-right:10px}`]\r\n})\r\nexport class FlexibleAutoCompleteComponent implements AfterViewInit{\r\n\r\n\tprivate interval: any;\r\n\r\n\tentry = \"\";\r\n\tfilteredData: any[] = [];\r\n\r\n\t@Input(\"placeholder\")\r\n\tpublic placeholder = \"\";\r\n\t\r\n\t@Input(\"remotepath\")\r\n\tpublic remotepath = \"body\";\r\n\t\r\n\t@Input(\"prefetchdata\")\r\n\tpublic prefetchdata = false;\r\n\t\r\n\t@Input('keymap')\r\n    public keymap: any[] = [];\r\n\r\n    @Input(\"icon\")\r\n    public icon = \"\";\r\n\r\n    @Input(\"message\")\r\n    public message = \"\";\r\n\r\n\t@Input(\"direction\")\r\n    public direction = \"vertical\";\r\n\r\n    @Input(\"delayby\")\r\n    public delayby = 300;\r\n\r\n    @Input(\"triggeron\")\r\n    public triggeron = 2;\r\n\r\n    @Input(\"viewport\")\r\n    public viewport = \"200px\";\r\n\r\n\t@Input(\"template\")\r\n    public template: any;\r\n\r\n    @Input(\"source\")\r\n    public source: string;\r\n\r\n    @Input(\"data\")\r\n    public data: any;\r\n\r\n\t@Output(\"onselect\")\r\n\tonselect = new EventEmitter();\r\n\r\n\tconstructor(private http: Http) {}\r\n\t\r\n\tngAfterViewInit() {\r\n\t\tif (this.prefetchdata && this.source) {\r\n\t\t\tthis.http.get(this.source).subscribe(\r\n\t\t\t\t(result: any) => {\r\n\t\t\t\t\tconst response = this.traverseResult(result);\r\n\t\t\t\t\tif (response) {\r\n\t\t\t\t\t\tthis.data = response;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate traverseResult(response) {\r\n\t\tconst list = this.remotepath.split(\".\");\r\n\t\tlist.map( (item) => {\r\n\t\t\tresponse = response ? response[item] : undefined;\r\n\t\t});\r\n\t\tconst x = list.length ? response : undefined;\r\n\t\treturn x && (typeof x === \"string\") ? JSON.parse(x) : x;\r\n\t}\r\n\r\n\tclickup(event, item) {\r\n\t\tconst code = event.which;\r\n\t\t\r\n\t\tif (code === 13) {\r\n\t\t\tthis.selectTab( item );\r\n\t\t}\t\r\n\t}\r\n\tkeyup(event) {\r\n        const code = event.which;\r\n\t\t\r\n\t\tif (code === 13) {\r\n\t\t\tif (this.filteredData && this.filteredData.length) {\r\n\t\t\t\tthis.selectTab( this.filteredData[0] );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.entry = event.target.value;\r\n\t\t\tif (this.interval) {\r\n\t\t\t\tclearTimeout(this.interval);\r\n\t\t\t}\r\n\t\t\tthis.interval = setTimeout( () => {\r\n\t\t\t\tconst key = this.entry.toLowerCase();\r\n\t\t\t\tif (key.length > this.triggeron) {\r\n\t\t\t\t\tif (!this.prefetchdata && this.source) {\r\n\t\t\t\t\t\tthis.http.get(this.source + key).subscribe(\r\n\t\t\t\t\t\t\t(result: any) => {\r\n\t\t\t\t\t\t\t\tconst response = this.traverseResult(result);\r\n\t\t\t\t\t\t\t\tif (response) {\r\n\t\t\t\t\t\t\t\t\tthis.data = response;\r\n\t\t\t\t\t\t\t\t\tthis.filteredData = response;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else if (this.data) {\r\n\t\t\t\t\t\tthis.filteredData = this.data.filter( (item) => {\r\n\t\t\t\t\t\t\tlet keep = false;\r\n\t\t\t\t\t\t\tfor(let j = 0; j < this.keymap.length; j++) {\r\n\t\t\t\t\t\t\t\tconst k = this.keymap[j];\r\n\t\t\t\t\t\t\t\tlet tmp = item[k]\r\n\t\t\t\t\t\t\t\tconst v = tmp ? tmp.toLowerCase() : undefined;\r\n\t\t\t\t\t\t\t\tif (v && v.indexOf(key) >= 0) {\r\n\t\t\t\t\t\t\t\t\tkeep = true;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn keep;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.filteredData = [];\r\n\t\t\t\t}\r\n\t\t\t}, this.delayby);\r\n\t\t}\r\n\t}\r\n\tselectTab(item) {\r\n\t\tthis.onselect.emit(item);\r\n\t\tthis.filteredData = [];\r\n\t\tthis.entry = \"\";\r\n\t}\r\n}\r\n",
    "/*\r\n* Provides rendering of flexible tabs in a lazy load fashion.\r\n*/\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { FlexibleAutoCompleteComponent } from './flexible-auto-complete.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        HttpModule\r\n    ],\r\n    declarations: [\r\n        FlexibleAutoCompleteComponent\r\n    ],\r\n    exports: [\r\n        FlexibleAutoCompleteComponent\r\n    ],\r\n    entryComponents: [\r\n    ],\r\n    providers: [\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class FlexibleAutoCompleteModule {}\r\n"
  ],
  "names": [
    "FlexibleAutoCompleteComponent",
    "http",
    "this",
    "entry",
    "filteredData",
    "placeholder",
    "remotepath",
    "prefetchdata",
    "keymap",
    "icon",
    "message",
    "direction",
    "delayby",
    "triggeron",
    "viewport",
    "onselect",
    "EventEmitter",
    "prototype",
    "ngAfterViewInit",
    "_this",
    "source",
    "get",
    "subscribe",
    "result",
    "response",
    "traverseResult",
    "data",
    "list",
    "split",
    "map",
    "item",
    "undefined",
    "x",
    "length",
    "JSON",
    "parse",
    "clickup",
    "event",
    "which",
    "selectTab",
    "keyup",
    "target",
    "value",
    "interval",
    "clearTimeout",
    "setTimeout",
    "key",
    "toLowerCase",
    "filter",
    "keep",
    "j",
    "tmp",
    "v",
    "indexOf",
    "emit",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "Http",
    "Input",
    "Output",
    "FlexibleAutoCompleteModule",
    "NgModule",
    "imports",
    "CommonModule",
    "HttpModule",
    "declarations",
    "exports",
    "entryComponents",
    "providers",
    "schemas",
    "CUSTOM_ELEMENTS_SCHEMA"
  ],
  "mappings": "iXAMA,IAAAA,EAAA,WA4FC,SAADA,EAAqBC,GAAAC,KAArBD,KAAqBA,EA7CrBC,KAAAC,MAAS,GACTD,KAAAE,gBAGAF,KAAAG,YAAsB,GAGtBH,KAAAI,WAAqB,OAGrBJ,KAAAK,cAAuB,EAGvBL,KAAAM,UAGAN,KAAAO,KAAkB,GAGlBP,KAAAQ,QAAqB,GAGrBR,KAAAS,UAAuB,WAGvBT,KAAAU,QAAqB,IAGrBV,KAAAW,UAAuB,EAGvBX,KAAAY,SAAsB,QAYtBZ,KAAAa,SAAY,IAAIC,EAAAA,oBAIfhB,EAADiB,UAAAC,gBAAC,WAAA,IAADC,EAAAjB,KACMA,KAAKK,cAAgBL,KAAKkB,QAC7BlB,KAAKD,KAAKoB,IAAInB,KAAKkB,QAAQE,UAC1B,SAACC,GACA,IAAMC,EAAWL,EAAKM,eAAeF,GACjCC,IACHL,EAAKO,KAAOF,MAOTxB,EAATiB,UAAAQ,eAAS,SAAeD,GACtB,IAAMG,EAAOzB,KAAKI,WAAWsB,MAAM,KACnCD,EAAKE,IAAK,SAACC,GACVN,EAAWA,EAAWA,EAASM,GAAQC,YAExC,IAAMC,EAAIL,EAAKM,OAAST,EAAWO,UACnC,OAAOC,GAAmB,iBAANA,EAAkBE,KAAKC,MAAMH,GAAKA,GAGvDhC,EAADiB,UAAAmB,QAAC,SAAQC,EAAOP,GAGD,KAFAO,EAAMC,OAGlBpC,KAAKqC,UAAWT,IAGlB9B,EAADiB,UAAAuB,MAAC,SAAMH,GAAN,IAADlB,EAAAjB,KAGe,KAFMmC,EAAMC,MAGpBpC,KAAKE,cAAgBF,KAAKE,aAAa6B,QAC1C/B,KAAKqC,UAAWrC,KAAKE,aAAa,KAGnCF,KAAKC,MAAQkC,EAAMI,OAAOC,MACtBxC,KAAKyC,UACRC,aAAa1C,KAAKyC,UAEnBzC,KAAKyC,SAAWE,WAAY,WAC3B,IAAMC,EAAM3B,EAAKhB,MAAM4C,cACnBD,EAAIb,OAASd,EAAKN,WAChBM,EAAKZ,cAAgBY,EAAKC,OAC9BD,EAAKlB,KAAKoB,IAAIF,EAAKC,OAAS0B,GAAKxB,UAChC,SAACC,GACA,IAAMC,EAAWL,EAAKM,eAAeF,GACjCC,IACHL,EAAKO,KAAOF,EACZL,EAAKf,aAAeoB,KAIbL,EAAKO,OACfP,EAAKf,aAAee,EAAKO,KAAKsB,OAAQ,SAAClB,GAEtC,IADA,IAAImB,GAAO,EACHC,EAAI,EAAGA,EAAI/B,EAAKX,OAAOyB,OAAQiB,IAAK,CAC3C,IACIC,EAAMrB,EADAX,EAAKX,OAAO0C,IAEhBE,EAAID,EAAMA,EAAIJ,cAAgBhB,UACpC,GAAIqB,GAAuB,GAAlBA,EAAEC,QAAQP,GAAW,CAC7BG,GAAO,EACP,OAGF,OAAOA,KAIT9B,EAAKf,iBAEJF,KAAKU,WAGVZ,EAADiB,UAAAsB,UAAC,SAAUT,GACT5B,KAAKa,SAASuC,KAAKxB,GACnB5B,KAAKE,gBACLF,KAAKC,MAAQ,MA5Kf,kBAUAoD,KAACC,EAAAA,UAADC,OACCC,SAAU,yBACVC,SAAU,w2CA6BVC,QAAS,wlDAjCVL,KAASM,EAAAA,0BA0CTxD,cAAAkD,KAAEO,EAAAA,MAAFL,MAAQ,iBAGRnD,aAAAiD,KAAEO,EAAAA,MAAFL,MAAQ,gBAGRlD,eAAAgD,KAAEO,EAAAA,MAAFL,MAAQ,kBAGRjD,SAAA+C,KAAEO,EAAAA,MAAFL,MAAQ,YAGRhD,OAAA8C,KAAKO,EAAAA,MAALL,MAAW,UAGX/C,UAAA6C,KAAKO,EAAAA,MAALL,MAAW,aAGX9C,YAAA4C,KAAEO,EAAAA,MAAFL,MAAQ,eAGR7C,UAAA2C,KAAKO,EAAAA,MAALL,MAAW,aAGX5C,YAAA0C,KAAKO,EAAAA,MAALL,MAAW,eAGX3C,WAAAyC,KAAKO,EAAAA,MAALL,MAAW,cAGXE,WAAAJ,KAAEO,EAAAA,MAAFL,MAAQ,cAGRrC,SAAAmC,KAAKO,EAAAA,MAALL,MAAW,YAGX/B,OAAA6B,KAAKO,EAAAA,MAALL,MAAW,UAGX1C,WAAAwC,KAAEQ,EAAAA,OAAFN,MAAS,eC5FT,IAAAO,EAAA,4BAMAT,KAACU,EAAAA,SAADR,OACIS,SACIC,EAAAA,aACAC,EAAAA,YAEJC,cACIrE,GAEJsE,SACItE,GAEJuE,mBAEAC,aAEAC,SAAUC,EAAAA"
}
